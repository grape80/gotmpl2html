on:
  workflow_call:
  workflow_dispatch:
    inputs:
      tag:
        description: "Enter the tag name"
        required: true

jobs:
  godeploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "TAG_NAME=${{ github.ref_name }}" >> $GITHUB_ENV

      - if: ${{ inputs.tag }} != ''
        run: echo "TAG_NAME=${{ inputs.tag }}" >> $GITHUB_ENV

      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.TAG_NAME }}
          body: Changes in this Release
          draft: true
          prerelease: true

    # runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     goos: [linux, darwin, windows]
    #     goarch: [amd64, arm64]
    # steps:
    #   - uses: actions/checkout@v3
    #   - run: docker compose up -d cicd && docker compose ps cicd
    #   - run: docker compose exec cicd make gox

    # - uses: actions/upload-artifact@v3
    #   with:
    #     name: deploy_godeploy_log
    #     path: log/deploy/

    # - uses: actions/upload-release-asset@v1
    #   if: ${{ matrix.goos }} == 'windows'
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: dist/${{ github.event.repository.name }}-.${{ matrix.goos }}-${{ matrix.goarch }}.zip
    #     asset_name: ${{ github.event.repository.name }}-${{ github.ref }}.${{ matrix.goos }}-${{ matrix.goarch }}.zip
    #     asset_content_type: application/zip

    # - uses: actions/upload-release-asset@v1
    #   if: ${{ matrix.goos }} != 'windows'
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: dist/${{ github.event.repository.name }}-.${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
    #     asset_name: ${{ github.event.repository.name }}-.${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
    #     asset_content_type: application/gzip
